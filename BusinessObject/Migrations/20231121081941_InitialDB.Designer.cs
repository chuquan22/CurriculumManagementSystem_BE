// <auto-generated />
using System;
using BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(CMSDbContext))]
    [Migration("20231121081941_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessObject.AssessmentMethod", b =>
                {
                    b.Property<int>("assessment_method_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("assessment_method_id"), 1L, 1);

                    b.Property<string>("assessment_method_component")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("assessment_type_id")
                        .HasColumnType("int");

                    b.HasKey("assessment_method_id");

                    b.HasIndex("assessment_type_id");

                    b.ToTable("AssessmentMethod");

                    b.HasData(
                        new
                        {
                            assessment_method_id = 1,
                            assessment_method_component = "Assignment",
                            assessment_type_id = 2
                        },
                        new
                        {
                            assessment_method_id = 2,
                            assessment_method_component = "Bài học online",
                            assessment_type_id = 1
                        },
                        new
                        {
                            assessment_method_id = 3,
                            assessment_method_component = "Lab",
                            assessment_type_id = 1
                        },
                        new
                        {
                            assessment_method_id = 4,
                            assessment_method_component = "Bảo vệ assignment",
                            assessment_type_id = 2
                        },
                        new
                        {
                            assessment_method_id = 5,
                            assessment_method_component = "Quiz",
                            assessment_type_id = 1
                        },
                        new
                        {
                            assessment_method_id = 6,
                            assessment_method_component = "Đánh giá Assignment GĐ 1",
                            assessment_type_id = 1
                        },
                        new
                        {
                            assessment_method_id = 7,
                            assessment_method_component = "Đánh giá Assignment GĐ 2",
                            assessment_type_id = 1
                        });
                });

            modelBuilder.Entity("BusinessObject.AssessmentType", b =>
                {
                    b.Property<int>("assessment_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("assessment_type_id"), 1L, 1);

                    b.Property<string>("assessment_type_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("assessment_type_id");

                    b.ToTable("AssessmentType");

                    b.HasData(
                        new
                        {
                            assessment_type_id = 1,
                            assessment_type_name = "On-going"
                        },
                        new
                        {
                            assessment_type_id = 2,
                            assessment_type_name = "Final Exam"
                        });
                });

            modelBuilder.Entity("BusinessObject.Batch", b =>
                {
                    b.Property<int>("batch_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("batch_id"), 1L, 1);

                    b.Property<string>("batch_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("batch_order")
                        .HasColumnType("int");

                    b.Property<int>("degree_level_id")
                        .HasColumnType("int");

                    b.HasKey("batch_id");

                    b.HasIndex("degree_level_id");

                    b.ToTable("Batch");

                    b.HasData(
                        new
                        {
                            batch_id = 1,
                            batch_name = "7.1",
                            batch_order = 1,
                            degree_level_id = 2
                        },
                        new
                        {
                            batch_id = 2,
                            batch_name = "17",
                            batch_order = 1,
                            degree_level_id = 3
                        },
                        new
                        {
                            batch_id = 3,
                            batch_name = "18",
                            batch_order = 2,
                            degree_level_id = 3
                        },
                        new
                        {
                            batch_id = 4,
                            batch_name = "19.1",
                            batch_order = 4,
                            degree_level_id = 1
                        },
                        new
                        {
                            batch_id = 5,
                            batch_name = "19.2",
                            batch_order = 5,
                            degree_level_id = 1
                        },
                        new
                        {
                            batch_id = 6,
                            batch_name = "19.3",
                            batch_order = 6,
                            degree_level_id = 1
                        },
                        new
                        {
                            batch_id = 7,
                            batch_name = "18.2",
                            batch_order = 2,
                            degree_level_id = 1
                        },
                        new
                        {
                            batch_id = 8,
                            batch_name = "18.3",
                            batch_order = 3,
                            degree_level_id = 1
                        },
                        new
                        {
                            batch_id = 9,
                            batch_name = "20.1",
                            batch_order = 6,
                            degree_level_id = 1
                        },
                        new
                        {
                            batch_id = 10,
                            batch_name = "18.1",
                            batch_order = 1,
                            degree_level_id = 1
                        });
                });

            modelBuilder.Entity("BusinessObject.ClassSessionType", b =>
                {
                    b.Property<int>("class_session_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("class_session_type_id"), 1L, 1);

                    b.Property<string>("class_session_type_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("class_session_type_id");

                    b.ToTable("ClassSessionType");

                    b.HasData(
                        new
                        {
                            class_session_type_id = 1,
                            class_session_type_name = "Online"
                        },
                        new
                        {
                            class_session_type_id = 2,
                            class_session_type_name = "Offline"
                        });
                });

            modelBuilder.Entity("BusinessObject.CLO", b =>
                {
                    b.Property<int>("CLO_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CLO_id"), 1L, 1);

                    b.Property<string>("CLO_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLO_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("syllabus_id")
                        .HasColumnType("int");

                    b.HasKey("CLO_id");

                    b.HasIndex("syllabus_id");

                    b.ToTable("CLO");
                });

            modelBuilder.Entity("BusinessObject.Combo", b =>
                {
                    b.Property<int>("combo_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("combo_id"), 1L, 1);

                    b.Property<string>("combo_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("combo_english_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("combo_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<int>("specialization_id")
                        .HasColumnType("int");

                    b.HasKey("combo_id");

                    b.HasIndex("specialization_id");

                    b.ToTable("Combo");

                    b.HasData(
                        new
                        {
                            combo_id = 1,
                            combo_code = "CN1",
                            combo_english_name = "Interior and Exterior Design",
                            combo_name = "Thiết kế nội và ngoại thất",
                            is_active = true,
                            specialization_id = 1
                        },
                        new
                        {
                            combo_id = 2,
                            combo_code = "CN2",
                            combo_english_name = "Film Making and Advertising",
                            combo_name = "Dựng phim và quảng cáo",
                            is_active = true,
                            specialization_id = 1
                        });
                });

            modelBuilder.Entity("BusinessObject.Curriculum", b =>
                {
                    b.Property<int>("curriculum_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("curriculum_id"), 1L, 1);

                    b.Property<string>("Formality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("approved_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("curriculum_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("curriculum_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("curriculum_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("decision_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("english_curriculum_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<int>("specialization_id")
                        .HasColumnType("int");

                    b.Property<int>("total_semester")
                        .HasColumnType("int");

                    b.HasKey("curriculum_id");

                    b.HasIndex("specialization_id");

                    b.ToTable("Curriculum");

                    b.HasData(
                        new
                        {
                            curriculum_id = 1,
                            Formality = "formal education",
                            approved_date = new DateTime(2023, 11, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            curriculum_code = "GD-GD-CD-19.3",
                            curriculum_description = "",
                            curriculum_name = "Thiết kế đồ họa",
                            decision_No = "360/QĐ-CĐFPL",
                            english_curriculum_name = "Graphic Design",
                            is_active = true,
                            specialization_id = 1,
                            total_semester = 6
                        },
                        new
                        {
                            curriculum_id = 2,
                            Formality = "formal education",
                            approved_date = new DateTime(2023, 11, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            curriculum_code = "GD-GD-CD-19.2",
                            curriculum_description = "",
                            curriculum_name = "Thiết kế đồ họa",
                            decision_No = "360/QĐ-CĐFPL",
                            english_curriculum_name = "Graphic Design",
                            is_active = true,
                            specialization_id = 1,
                            total_semester = 6
                        });
                });

            modelBuilder.Entity("BusinessObject.CurriculumBatch", b =>
                {
                    b.Property<int>("curriculum_id")
                        .HasColumnType("int");

                    b.Property<int>("batch_id")
                        .HasColumnType("int");

                    b.HasKey("curriculum_id", "batch_id");

                    b.HasIndex("batch_id");

                    b.ToTable("CurriculumBatch");

                    b.HasData(
                        new
                        {
                            curriculum_id = 1,
                            batch_id = 6
                        },
                        new
                        {
                            curriculum_id = 2,
                            batch_id = 5
                        });
                });

            modelBuilder.Entity("BusinessObject.CurriculumSubject", b =>
                {
                    b.Property<int>("curriculum_id")
                        .HasColumnType("int");

                    b.Property<int>("subject_id")
                        .HasColumnType("int");

                    b.Property<int?>("combo_id")
                        .HasColumnType("int");

                    b.Property<bool>("option")
                        .HasColumnType("bit");

                    b.Property<string>("subject_group")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("term_no")
                        .HasColumnType("int");

                    b.HasKey("curriculum_id", "subject_id");

                    b.HasIndex("subject_id");

                    b.ToTable("CurriculumSubject");

                    b.HasData(
                        new
                        {
                            curriculum_id = 1,
                            subject_id = 1,
                            combo_id = 1,
                            option = false,
                            subject_group = "General Subject",
                            term_no = 3
                        },
                        new
                        {
                            curriculum_id = 1,
                            subject_id = 3,
                            combo_id = 2,
                            option = true,
                            subject_group = "Option Subject",
                            term_no = 3
                        },
                        new
                        {
                            curriculum_id = 2,
                            subject_id = 4,
                            combo_id = 0,
                            option = false,
                            subject_group = "Specialization Subject",
                            term_no = 3
                        },
                        new
                        {
                            curriculum_id = 1,
                            subject_id = 5,
                            combo_id = 0,
                            option = false,
                            subject_group = "Basic Subject",
                            term_no = 2
                        },
                        new
                        {
                            curriculum_id = 1,
                            subject_id = 2,
                            combo_id = 3,
                            option = true,
                            subject_group = "Option Subject",
                            term_no = 1
                        });
                });

            modelBuilder.Entity("BusinessObject.DegreeLevel", b =>
                {
                    b.Property<int>("degree_level_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("degree_level_id"), 1L, 1);

                    b.Property<string>("degree_level_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("degree_level_english_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("degree_level_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("degree_level_id");

                    b.ToTable("DegreeLevel");

                    b.HasData(
                        new
                        {
                            degree_level_id = 1,
                            degree_level_code = "CD",
                            degree_level_english_name = "Associate Degree",
                            degree_level_name = "Cao Đẳng"
                        },
                        new
                        {
                            degree_level_id = 2,
                            degree_level_code = "IC",
                            degree_level_english_name = "International Associate Degree",
                            degree_level_name = "Cao Đẳng Quốc Tế"
                        },
                        new
                        {
                            degree_level_id = 3,
                            degree_level_code = "TC",
                            degree_level_english_name = "Vocational Secondary",
                            degree_level_name = "Phổ Thông Cao Đẳng"
                        });
                });

            modelBuilder.Entity("BusinessObject.GradingCLO", b =>
                {
                    b.Property<int>("grading_id")
                        .HasColumnType("int");

                    b.Property<int>("CLO_id")
                        .HasColumnType("int");

                    b.HasKey("grading_id", "CLO_id");

                    b.HasIndex("CLO_id");

                    b.ToTable("GradingCLO");
                });

            modelBuilder.Entity("BusinessObject.GradingStruture", b =>
                {
                    b.Property<int>("grading_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("grading_id"), 1L, 1);

                    b.Property<int?>("AssessmentMethodassessment_method_id")
                        .HasColumnType("int");

                    b.Property<string>("assessment_component")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("assessment_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clo_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grading_duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grading_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("grading_part")
                        .HasColumnType("int");

                    b.Property<decimal>("grading_weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("how_granding_structure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("minimum_value_to_meet_completion")
                        .HasColumnType("int");

                    b.Property<string>("number_of_questions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("references")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("scope_knowledge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("session_no")
                        .HasColumnType("int");

                    b.Property<int>("syllabus_id")
                        .HasColumnType("int");

                    b.Property<string>("type_of_questions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("grading_id");

                    b.HasIndex("AssessmentMethodassessment_method_id");

                    b.HasIndex("syllabus_id");

                    b.ToTable("GradingStruture");
                });

            modelBuilder.Entity("BusinessObject.LearningMethod", b =>
                {
                    b.Property<int>("learning_method_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("learning_method_id"), 1L, 1);

                    b.Property<string>("learning_method_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("learning_method_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("learning_method_id");

                    b.ToTable("LearningMethod");

                    b.HasData(
                        new
                        {
                            learning_method_id = 1,
                            learning_method_code = "T01",
                            learning_method_name = "Online"
                        },
                        new
                        {
                            learning_method_id = 2,
                            learning_method_code = "T02",
                            learning_method_name = "Blended"
                        },
                        new
                        {
                            learning_method_id = 3,
                            learning_method_code = "T03",
                            learning_method_name = "Traditional"
                        });
                });

            modelBuilder.Entity("BusinessObject.LearningResource", b =>
                {
                    b.Property<int>("learning_resource_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("learning_resource_id"), 1L, 1);

                    b.Property<string>("learning_resouce_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("learning_resource_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("learning_resource_id");

                    b.ToTable("LearningResource");

                    b.HasData(
                        new
                        {
                            learning_resource_id = 1,
                            learning_resouce_code = "T01",
                            learning_resource_type = "Internet"
                        },
                        new
                        {
                            learning_resource_id = 2,
                            learning_resouce_code = "T02",
                            learning_resource_type = "Purchased book"
                        },
                        new
                        {
                            learning_resource_id = 3,
                            learning_resouce_code = "T03",
                            learning_resource_type = "Free e-book"
                        },
                        new
                        {
                            learning_resource_id = 4,
                            learning_resouce_code = "T04",
                            learning_resource_type = "Officially published"
                        },
                        new
                        {
                            learning_resource_id = 5,
                            learning_resouce_code = "T05",
                            learning_resource_type = "Self-compiled"
                        },
                        new
                        {
                            learning_resource_id = 6,
                            learning_resouce_code = "T06",
                            learning_resource_type = "Udemy course"
                        });
                });

            modelBuilder.Entity("BusinessObject.Major", b =>
                {
                    b.Property<int>("major_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("major_id"), 1L, 1);

                    b.Property<int>("degree_level_id")
                        .HasColumnType("int");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("major_code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("major_english_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("major_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("major_id");

                    b.HasIndex("degree_level_id");

                    b.ToTable("Major");

                    b.HasData(
                        new
                        {
                            major_id = 1,
                            degree_level_id = 1,
                            is_active = true,
                            major_code = "6210402",
                            major_english_name = "Graphic Design",
                            major_name = "Thiết kế đồ họa"
                        },
                        new
                        {
                            major_id = 2,
                            degree_level_id = 1,
                            is_active = true,
                            major_code = "6480201",
                            major_english_name = "Information Technology",
                            major_name = "Công nghệ thông tin"
                        },
                        new
                        {
                            major_id = 3,
                            degree_level_id = 1,
                            is_active = true,
                            major_code = "6340404",
                            major_english_name = "Business Administration",
                            major_name = "Quản trị kinh doanh"
                        },
                        new
                        {
                            major_id = 4,
                            degree_level_id = 1,
                            is_active = true,
                            major_code = "6510305",
                            major_english_name = "Automation Engineering",
                            major_name = "CNKTĐK & Tự động hóa"
                        },
                        new
                        {
                            major_id = 5,
                            degree_level_id = 3,
                            is_active = true,
                            major_code = "5340404",
                            major_english_name = "Business Administration",
                            major_name = "Quản trị kinh doanh"
                        },
                        new
                        {
                            major_id = 6,
                            degree_level_id = 2,
                            is_active = true,
                            major_code = "6480207",
                            major_english_name = "Computing",
                            major_name = "Lập trình máy tính"
                        });
                });

            modelBuilder.Entity("BusinessObject.Material", b =>
                {
                    b.Property<int>("material_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("material_id"), 1L, 1);

                    b.Property<int>("learning_resource_id")
                        .HasColumnType("int");

                    b.Property<string>("material_ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("material_author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("material_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("material_edition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("material_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("material_published_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("material_publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("material_purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("material_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("syllabus_id")
                        .HasColumnType("int");

                    b.HasKey("material_id");

                    b.HasIndex("learning_resource_id");

                    b.HasIndex("syllabus_id");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("BusinessObject.PLOMapping", b =>
                {
                    b.Property<int>("PLO_id")
                        .HasColumnType("int");

                    b.Property<int>("subject_id")
                        .HasColumnType("int");

                    b.HasKey("PLO_id", "subject_id");

                    b.HasIndex("subject_id");

                    b.ToTable("PLOMapping");

                    b.HasData(
                        new
                        {
                            PLO_id = 2,
                            subject_id = 3
                        },
                        new
                        {
                            PLO_id = 1,
                            subject_id = 2
                        },
                        new
                        {
                            PLO_id = 1,
                            subject_id = 3
                        },
                        new
                        {
                            PLO_id = 1,
                            subject_id = 4
                        },
                        new
                        {
                            PLO_id = 2,
                            subject_id = 4
                        });
                });

            modelBuilder.Entity("BusinessObject.PLOs", b =>
                {
                    b.Property<int>("PLO_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PLO_id"), 1L, 1);

                    b.Property<string>("PLO_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PLO_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("curriculum_id")
                        .HasColumnType("int");

                    b.HasKey("PLO_id");

                    b.HasIndex("curriculum_id");

                    b.ToTable("PLOs");

                    b.HasData(
                        new
                        {
                            PLO_id = 1,
                            PLO_description = "Thiết kế xử lý hình ảnh, xây dựng các sản phẩm đồ họa 2D",
                            PLO_name = "PLO01",
                            curriculum_id = 1
                        },
                        new
                        {
                            PLO_id = 2,
                            PLO_description = "Thiết kế theo các chủ đề: xây dựng thương hiệu, ấn phẩm quảng cáo, bao bì",
                            PLO_name = "PLO02",
                            curriculum_id = 1
                        },
                        new
                        {
                            PLO_id = 3,
                            PLO_description = "Biên tập, kịch bản và xử lý kỹ xảo phim, phim quảng cáo, phim quảng cáo 3D",
                            PLO_name = "PLO03",
                            curriculum_id = 1
                        },
                        new
                        {
                            PLO_id = 4,
                            PLO_description = "Thiết kếm xây dưng các sản phẩm đồ họa nội ngoại thất 2D&3D hoặc các sản phẩm đồ họa 3D",
                            PLO_name = "PLO04",
                            curriculum_id = 1
                        },
                        new
                        {
                            PLO_id = 5,
                            PLO_description = "Kiến thức về đường, hình, khối và một số vấn đề mỹ thuật liên quan; kiến thức cơ bản về đồ họa; kiến thức cơ sở về mỹ thuật, thẩm mỹ; vật liệu,...",
                            PLO_name = "PLO05",
                            curriculum_id = 1
                        },
                        new
                        {
                            PLO_id = 6,
                            PLO_description = "Giao tiếp, tìm hiểu, nắm bắt nhu cầu của khách hàng, tư vấn cho khách hàng, làm được sản phẩm theo yêu cầu của khách hàng",
                            PLO_name = "PLO06",
                            curriculum_id = 1
                        },
                        new
                        {
                            PLO_id = 7,
                            PLO_description = "Giao tiếp, thuyết trình tự tin trước đám đông",
                            PLO_name = "PLO07",
                            curriculum_id = 2
                        },
                        new
                        {
                            PLO_id = 8,
                            PLO_description = "Kĩ năng làm việc nhóm",
                            PLO_name = "PLO08",
                            curriculum_id = 2
                        });
                });

            modelBuilder.Entity("BusinessObject.PreRequisite", b =>
                {
                    b.Property<int>("subject_id")
                        .HasColumnType("int");

                    b.Property<int>("pre_subject_id")
                        .HasColumnType("int");

                    b.Property<int>("pre_requisite_type_id")
                        .HasColumnType("int");

                    b.HasKey("subject_id", "pre_subject_id");

                    b.HasIndex("pre_requisite_type_id");

                    b.HasIndex("pre_subject_id");

                    b.ToTable("PreRequisite");

                    b.HasData(
                        new
                        {
                            subject_id = 1,
                            pre_subject_id = 2,
                            pre_requisite_type_id = 1
                        },
                        new
                        {
                            subject_id = 2,
                            pre_subject_id = 3,
                            pre_requisite_type_id = 2
                        },
                        new
                        {
                            subject_id = 3,
                            pre_subject_id = 5,
                            pre_requisite_type_id = 3
                        },
                        new
                        {
                            subject_id = 4,
                            pre_subject_id = 7,
                            pre_requisite_type_id = 4
                        },
                        new
                        {
                            subject_id = 5,
                            pre_subject_id = 8,
                            pre_requisite_type_id = 1
                        },
                        new
                        {
                            subject_id = 10,
                            pre_subject_id = 12,
                            pre_requisite_type_id = 1
                        },
                        new
                        {
                            subject_id = 11,
                            pre_subject_id = 14,
                            pre_requisite_type_id = 2
                        },
                        new
                        {
                            subject_id = 15,
                            pre_subject_id = 17,
                            pre_requisite_type_id = 3
                        });
                });

            modelBuilder.Entity("BusinessObject.PreRequisiteType", b =>
                {
                    b.Property<int>("pre_requisite_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pre_requisite_type_id"), 1L, 1);

                    b.Property<string>("pre_requisite_type_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pre_requisite_type_id");

                    b.ToTable("PreRequisiteType");

                    b.HasData(
                        new
                        {
                            pre_requisite_type_id = 1,
                            pre_requisite_type_name = "Corequisite"
                        },
                        new
                        {
                            pre_requisite_type_id = 2,
                            pre_requisite_type_name = "Prerequisite"
                        },
                        new
                        {
                            pre_requisite_type_id = 3,
                            pre_requisite_type_name = "Recommended"
                        },
                        new
                        {
                            pre_requisite_type_id = 4,
                            pre_requisite_type_name = "Elective"
                        },
                        new
                        {
                            pre_requisite_type_id = 5,
                            pre_requisite_type_name = "Passed"
                        },
                        new
                        {
                            pre_requisite_type_id = 6,
                            pre_requisite_type_name = "Participated"
                        });
                });

            modelBuilder.Entity("BusinessObject.Question", b =>
                {
                    b.Property<int>("question_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("question_id"), 1L, 1);

                    b.Property<string>("answers_A")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("answers_B")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("answers_C")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("answers_D")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correct_answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("question_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("question_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quiz_id")
                        .HasColumnType("int");

                    b.HasKey("question_id");

                    b.HasIndex("quiz_id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            question_id = 1,
                            answers_A = "Che dấu và bảo mật dữ liệu",
                            answers_B = "Hiển thị dữ liệu một cách tùy biến",
                            answers_C = "Thực thi nhanh hơn các câu lệnh truy vấn do đã được biên dịch sẵn",
                            answers_D = "Tất cả đáp án đều đúng",
                            correct_answer = "D",
                            question_name = "Lợi ích khi sử dụng View?",
                            question_type = "Single Choice",
                            quiz_id = 1
                        },
                        new
                        {
                            question_id = 2,
                            answers_A = "Cột chứa giá trị được tính toán từ nhiều cột khác phải được đặt tên",
                            answers_B = "Cột chứa giá trị được tính toán từ nhiều cột khác không được đặt tên",
                            answers_C = "Thực thi nhanh hơn các câu lệnh truy vấn do đã được biên dịch sẵn",
                            answers_D = "Tất cả đáp án đều đúng",
                            correct_answer = "D",
                            question_name = "Qui đinh đặt tên cột trong View?",
                            question_type = "Single Choice",
                            quiz_id = 2
                        },
                        new
                        {
                            question_id = 3,
                            answers_A = "Xem dữ liệu và cập nhật dữ liệu trong các bảng cơ sở qua View",
                            answers_B = "Xem dữ liệu",
                            answers_C = "cập nhật dữ liệu trong các bảng cơ sở qua View",
                            answers_D = "Tất cả đáp án đều sai",
                            correct_answer = "A",
                            question_name = "VIEW có thể cập nhật (updatable view) cho phép?",
                            question_type = "Single Choice",
                            quiz_id = 1
                        });
                });

            modelBuilder.Entity("BusinessObject.Quiz", b =>
                {
                    b.Property<int>("quiz_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("quiz_id"), 1L, 1);

                    b.Property<string>("quiz_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subject_id")
                        .HasColumnType("int");

                    b.HasKey("quiz_id");

                    b.HasIndex("subject_id");

                    b.ToTable("Quiz");

                    b.HasData(
                        new
                        {
                            quiz_id = 1,
                            quiz_name = "Quiz 1",
                            subject_id = 1
                        },
                        new
                        {
                            quiz_id = 2,
                            quiz_name = "Quiz 2",
                            subject_id = 2
                        },
                        new
                        {
                            quiz_id = 3,
                            quiz_name = "Quiz 3",
                            subject_id = 1
                        });
                });

            modelBuilder.Entity("BusinessObject.Role", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("role_id"), 1L, 1);

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("role_id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            role_id = 1,
                            role_name = "Dispatcher"
                        },
                        new
                        {
                            role_id = 2,
                            role_name = "Manager"
                        },
                        new
                        {
                            role_id = 3,
                            role_name = "Admin"
                        });
                });

            modelBuilder.Entity("BusinessObject.Semester", b =>
                {
                    b.Property<int>("semester_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("semester_id"), 1L, 1);

                    b.Property<int>("school_year")
                        .HasColumnType("int");

                    b.Property<DateTime>("semester_end_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("semester_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("semester_start_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("start_batch_id")
                        .HasColumnType("int");

                    b.HasKey("semester_id");

                    b.HasIndex("start_batch_id");

                    b.ToTable("Semester");

                    b.HasData(
                        new
                        {
                            semester_id = 1,
                            school_year = 2023,
                            semester_end_date = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            semester_name = "Fall",
                            semester_start_date = new DateTime(2023, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            start_batch_id = 6
                        },
                        new
                        {
                            semester_id = 2,
                            school_year = 2023,
                            semester_end_date = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            semester_name = "Summer",
                            semester_start_date = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            start_batch_id = 5
                        },
                        new
                        {
                            semester_id = 3,
                            school_year = 2023,
                            semester_end_date = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            semester_name = "Spring",
                            semester_start_date = new DateTime(2023, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            start_batch_id = 4
                        },
                        new
                        {
                            semester_id = 4,
                            school_year = 2022,
                            semester_end_date = new DateTime(2022, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            semester_name = "Fall",
                            semester_start_date = new DateTime(2022, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            start_batch_id = 8
                        },
                        new
                        {
                            semester_id = 5,
                            school_year = 2022,
                            semester_end_date = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            semester_name = "Summer",
                            semester_start_date = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            start_batch_id = 7
                        },
                        new
                        {
                            semester_id = 6,
                            school_year = 2022,
                            semester_end_date = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            semester_name = "Spring",
                            semester_start_date = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            start_batch_id = 9
                        });
                });

            modelBuilder.Entity("BusinessObject.SemesterPlan", b =>
                {
                    b.Property<int>("semester_id")
                        .HasColumnType("int");

                    b.Property<int>("curriculum_id")
                        .HasColumnType("int");

                    b.Property<int?>("term_no")
                        .HasColumnType("int");

                    b.HasKey("semester_id", "curriculum_id", "term_no");

                    b.HasIndex("curriculum_id");

                    b.ToTable("SemesterPlan");
                });

            modelBuilder.Entity("BusinessObject.Session", b =>
                {
                    b.Property<int>("schedule_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("schedule_id"), 1L, 1);

                    b.Property<string>("CLO_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ITU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("IVQ")
                        .HasColumnType("real");

                    b.Property<float>("ass_defense")
                        .HasColumnType("real");

                    b.Property<float>("assigment")
                        .HasColumnType("real");

                    b.Property<int>("class_session_type_id")
                        .HasColumnType("int");

                    b.Property<float>("eos_exam")
                        .HasColumnType("real");

                    b.Property<string>("lecturer_material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lecturer_material_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("online_lab")
                        .HasColumnType("real");

                    b.Property<float>("online_test")
                        .HasColumnType("real");

                    b.Property<float>("remote_learning")
                        .HasColumnType("real");

                    b.Property<string>("schedule_content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("schedule_lecturer_task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("schedule_student_task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("session_No")
                        .HasColumnType("int");

                    b.Property<string>("student_material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("student_material_link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("syllabus_id")
                        .HasColumnType("int");

                    b.Property<float>("video_learning")
                        .HasColumnType("real");

                    b.HasKey("schedule_id");

                    b.HasIndex("class_session_type_id");

                    b.HasIndex("syllabus_id");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("BusinessObject.SessionCLO", b =>
                {
                    b.Property<int>("CLO_id")
                        .HasColumnType("int");

                    b.Property<int>("session_id")
                        .HasColumnType("int");

                    b.HasKey("CLO_id", "session_id");

                    b.HasIndex("session_id");

                    b.ToTable("SessionCLO");
                });

            modelBuilder.Entity("BusinessObject.Specialization", b =>
                {
                    b.Property<int>("specialization_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("specialization_id"), 1L, 1);

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<int>("major_id")
                        .HasColumnType("int");

                    b.Property<int>("semester_id")
                        .HasColumnType("int");

                    b.Property<string>("specialization_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specialization_english_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specialization_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("specialization_id");

                    b.HasIndex("major_id");

                    b.HasIndex("semester_id");

                    b.ToTable("Specialization");

                    b.HasData(
                        new
                        {
                            specialization_id = 1,
                            is_active = true,
                            major_id = 1,
                            semester_id = 1,
                            specialization_code = "6210402",
                            specialization_english_name = "Graphic Design",
                            specialization_name = "Thiết kế đồ họa"
                        },
                        new
                        {
                            specialization_id = 2,
                            is_active = true,
                            major_id = 2,
                            semester_id = 4,
                            specialization_code = "6215463",
                            specialization_english_name = "Data Processing",
                            specialization_name = "Xử lý dữ liệu"
                        },
                        new
                        {
                            specialization_id = 3,
                            is_active = true,
                            major_id = 2,
                            semester_id = 3,
                            specialization_code = "6526432",
                            specialization_english_name = "Game Development",
                            specialization_name = "Lập trình Game"
                        },
                        new
                        {
                            specialization_id = 4,
                            is_active = true,
                            major_id = 2,
                            semester_id = 1,
                            specialization_code = "6480201",
                            specialization_english_name = "Software Application",
                            specialization_name = "Ứng dụng phần mềm"
                        },
                        new
                        {
                            specialization_id = 5,
                            is_active = true,
                            major_id = 5,
                            semester_id = 6,
                            specialization_code = "5340404",
                            specialization_english_name = "Digital Marketing",
                            specialization_name = "Digital Marketing"
                        },
                        new
                        {
                            specialization_id = 6,
                            is_active = true,
                            major_id = 6,
                            semester_id = 5,
                            specialization_code = "6480207",
                            specialization_english_name = "Data Analytics",
                            specialization_name = "Phân tích dữ liệu"
                        },
                        new
                        {
                            specialization_id = 7,
                            is_active = true,
                            major_id = 4,
                            semester_id = 4,
                            specialization_code = "6510305",
                            specialization_english_name = "Automotive Engineering",
                            specialization_name = "Cnktđk & Tự Động Hóa"
                        });
                });

            modelBuilder.Entity("BusinessObject.Subject", b =>
                {
                    b.Property<int>("subject_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subject_id"), 1L, 1);

                    b.Property<int>("assessment_method_id")
                        .HasColumnType("int");

                    b.Property<int>("credit")
                        .HasColumnType("int");

                    b.Property<string>("english_subject_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("exam_total")
                        .HasColumnType("int");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<int>("learning_method_id")
                        .HasColumnType("int");

                    b.Property<string>("subject_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subject_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total_time")
                        .HasColumnType("int");

                    b.Property<int>("total_time_class")
                        .HasColumnType("int");

                    b.HasKey("subject_id");

                    b.HasIndex("assessment_method_id");

                    b.HasIndex("learning_method_id");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            subject_id = 1,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Communication crisis management",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PRE209",
                            subject_name = "Quản trị khủng hoảng truyền thông",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 2,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Graduation Internship (Digital Marketing)",
                            exam_total = 41,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "PRO109",
                            subject_name = "Thực tập tốt nghiệp(TMDT)",
                            total_time = 75,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 3,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English 2.2",
                            exam_total = 41,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "ENT2227",
                            subject_name = "Tiếng anh 2.2",
                            total_time = 75,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 4,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English 2.1",
                            exam_total = 41,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "ENT2127",
                            subject_name = "Tiếng anh 2.1",
                            total_time = 75,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 5,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English 1.2",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "ENT1227",
                            subject_name = "Tiếng anh 1.2",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 6,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English 2.2",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "ENT2226",
                            subject_name = "Tiếng anh 2.2",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 7,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English 2.1",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "ENT2126",
                            subject_name = "Tiếng anh 2.1",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 8,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English 1.1",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "ENT1127",
                            subject_name = "Tiếng anh 1.1",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 9,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English 1.2",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "ENT1226",
                            subject_name = "Tiếng anh 1.2",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 10,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English for Hopitality 3",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "EHO0101",
                            subject_name = "Tiếng anh chuyên ngành 3 (NHKS)",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 11,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English 1.1",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "ENT1128",
                            subject_name = "Tiếng anh 1.1",
                            total_time = 90,
                            total_time_class = 31
                        },
                        new
                        {
                            subject_id = 12,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "English for Hopitality 1",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "EHO102",
                            subject_name = "Tiếng anh chuyên ngành 1 (NHKS)",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 13,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Informatics",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "COM1071",
                            subject_name = "Tin học",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 14,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Image Design using Photoshop",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL1013",
                            subject_name = "Thiết kế hình ảnh với Photoshop",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 15,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Graphic Introduction",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL116",
                            subject_name = "Nhập môn đồ họa",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 16,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Learning Skills",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PDP102",
                            subject_name = "Kỹ năng học tập",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 17,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Physical education",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "VIE103",
                            subject_name = "Gíao dục thể chất - Vovinam",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 18,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Illustration Design using Adobe Illustrator",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL1024",
                            subject_name = "Thiết kế minh họa với Illustrator",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 19,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Perspective and Layout in Graphic Design",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL1143",
                            subject_name = "Luật xa gần và bố cục trong thiết kế đồ họa",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 20,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Publication Design using InDesign",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL2111",
                            subject_name = "Chế bản điện tử với InDesign",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 21,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Color",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL2143",
                            subject_name = "Màu sắc",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 22,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Politics",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "VIE1016",
                            subject_name = "Chính trị",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 23,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Packaging Design",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL2123",
                            subject_name = "Thiết kế bao bì",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 24,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Typography",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL2133",
                            subject_name = "Nghệ thuật chữ",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 25,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Digital Marketing and Media Concepts",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL3191",
                            subject_name = "Thiết kế thương hiệu và Maketing",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 26,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Personal Development Skills",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PDP103",
                            subject_name = "Kỹ năng phát triển bản thân",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 27,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Project 1 (Graphic Design)",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PRO1112",
                            subject_name = "Dự án 1 (TKĐH)",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 28,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Photography and Retouch",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL117",
                            subject_name = "Kỹ thuật nhiếp ảnh",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 29,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Printing Technical",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL215",
                            subject_name = "Kỹ thuật in",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 30,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Adobe Animate CC",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL216",
                            subject_name = "Thiết kế đa truyền thông với Animate",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 31,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Creative Idea",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL217",
                            subject_name = "ý tưởng sáng tạo",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 32,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "3D Modeling using Maya",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL222",
                            subject_name = "Dựng hình với Maya 3D",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 33,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Storyboarding Advertisement",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL223",
                            subject_name = "Kịch bản phi quảng cáo",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 34,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Principles of Interior Design 1",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL225",
                            subject_name = "Nguyên lý thiết kế nội thất 1",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 35,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Autocad 2D",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL317",
                            subject_name = "Autocad 2D",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 36,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Interior design with 3D Max",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL2211",
                            subject_name = "Thiết kế nội thất với 3D Max",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 37,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Filming and editing using Adobe Premiere",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL224",
                            subject_name = "Quay và dựng phim với Adobe Premiere",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 38,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Principles of Interior Design 2",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL226",
                            subject_name = "Nguyên lý thiết kế nội thất 2",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 39,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Post Processing using Premier",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL3151",
                            subject_name = "Xử lý hậu kỳ với Adobe Premiere",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 40,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Adobe After Effect",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL3211",
                            subject_name = "Hiệu ứng kỹ xảo với Adobe After Effect",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 41,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Creating Perspectives using SketchUp",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL322",
                            subject_name = "Dựng phối cảnh với SketchUp",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 42,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "3D Modeling using C4D",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL323",
                            subject_name = "Dựng phim với C4D",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 43,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Motion using C4D",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MUL324",
                            subject_name = "Chuyển động với C4D",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 44,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Professional Skills",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PDP104",
                            subject_name = "Kỹ năng làm việc",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 45,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Startup Your Business",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "SYB3012",
                            subject_name = "Khởi sự doanh nghiệp",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 46,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Graduation Internship (Graphic Design)",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PRO119",
                            subject_name = "Thực tập tốt nghiệp (TKĐH)",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 47,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Graduation Project (Film and Ads)",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PRO221",
                            subject_name = "Dự án tốt nghiệp (TKĐH-Phim và Quảng cáo)",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 48,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Graduation Project (Interior and Exterior)",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PRO223",
                            subject_name = "Dự án tốt nghiệp (TKĐH Nội và Ngoại)",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 49,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Law",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "VIE1026",
                            subject_name = "Pháp luật",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 50,
                            assessment_method_id = 1,
                            credit = 4,
                            english_subject_name = "Defense Education",
                            exam_total = 3,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "VIE104",
                            subject_name = "giáo dục quốc phòng",
                            total_time = 75,
                            total_time_class = 71
                        },
                        new
                        {
                            subject_id = 51,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Introduction to Sofware Engineering",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "SOF102",
                            subject_name = "Nhập môn kỹ thuật phần mềm",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 52,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Public Speaking Skills",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PRE1022",
                            subject_name = "Kỹ năng thuyết trình trước công chúng ",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 53,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Transportation Insurance",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "LOG211",
                            subject_name = "Bảo hiểm vận tải",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 54,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Tourguide Operations 1",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "TOU2033",
                            subject_name = "Nghiệp vụ hướng dẫn 1",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 55,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Tourguide Operations 1",
                            exam_total = 4,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "TOU2032",
                            subject_name = "Nghiệp vụ hướng dẫn 1",
                            total_time = 70,
                            total_time_class = 40
                        },
                        new
                        {
                            subject_id = 56,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Procurement Oprerations",
                            exam_total = 41,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "LOG105",
                            subject_name = "Nghiệp vụ mua sắm",
                            total_time = 75,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 57,
                            assessment_method_id = 4,
                            credit = 3,
                            english_subject_name = "Electrical circuits and electrical safety",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT102",
                            subject_name = "Mạch điện và an toàn điện",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 58,
                            assessment_method_id = 4,
                            credit = 3,
                            english_subject_name = "Basic electronics",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT103",
                            subject_name = "Điện tử cơ bản",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 59,
                            assessment_method_id = 4,
                            credit = 3,
                            english_subject_name = "Electrical and electronic circuit design",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "AUT104",
                            subject_name = "Thiết kế mạch điện - điện tử",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 60,
                            assessment_method_id = 5,
                            credit = 3,
                            english_subject_name = "Pulse & Digital Engineering",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT105",
                            subject_name = "Kỹ thuật xung số",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 61,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Electronic circuits and applications",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT106",
                            subject_name = "Mạch điện tử và ứng dụng",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 62,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Installation of electrical systems",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT107",
                            subject_name = "Lắp đặt hệ thống điện",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 63,
                            assessment_method_id = 4,
                            credit = 3,
                            english_subject_name = "Installation of industrial electrical cabinets",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT108",
                            subject_name = "Lắp đặt tủ điện công nghiệp",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 64,
                            assessment_method_id = 5,
                            credit = 3,
                            english_subject_name = "Sensor engineering",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT110",
                            subject_name = "Kỹ thuật cảm biến",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 65,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Electric drive",
                            exam_total = 41,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "INE202",
                            subject_name = "Truyền động điện",
                            total_time = 75,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 66,
                            assessment_method_id = 4,
                            credit = 3,
                            english_subject_name = "Project 1 (Automation Engineering )",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "PRO125",
                            subject_name = "Dự án 1 (TĐH)",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 67,
                            assessment_method_id = 5,
                            credit = 3,
                            english_subject_name = "Automatic control theory",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT109",
                            subject_name = "Lý thuyết điều khiển tự động",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 68,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Basic Programmable Logic Controller",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT206",
                            subject_name = "PLC cơ bản",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 69,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Arduino Programming",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT208",
                            subject_name = "Lập trình Arduino",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 70,
                            assessment_method_id = 5,
                            credit = 3,
                            english_subject_name = "Industrial communication network",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT209",
                            subject_name = "Mạng truyền thông công nghiệp",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 71,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Software design",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT210",
                            subject_name = "Thiết kế bằng phần mềm",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 72,
                            assessment_method_id = 5,
                            credit = 3,
                            english_subject_name = "Hydraulic & Pneumatic Control",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT211",
                            subject_name = "Điều khiển thủy lực và khí nén",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 73,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Microcontrollers",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "INE214",
                            subject_name = "Vi điều khiển",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 74,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Advanced Programmable Logic Controller",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT207",
                            subject_name = "PLC nâng cao",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 75,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Embedded programming",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT212",
                            subject_name = "Lập trình nhúng",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 76,
                            assessment_method_id = 5,
                            credit = 3,
                            english_subject_name = "Recycled energy",
                            exam_total = 6,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT213",
                            subject_name = "Năng lượng tái tạo",
                            total_time = 60,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 77,
                            assessment_method_id = 5,
                            credit = 3,
                            english_subject_name = "Process automation technology",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT214",
                            subject_name = "Tự động hóa quá trình công nghệ",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 78,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "IoTs application development",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT215",
                            subject_name = "Phát triển ứng dụng IoTs",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 79,
                            assessment_method_id = 4,
                            credit = 3,
                            english_subject_name = "Industrial Robots",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT216",
                            subject_name = "Robot công nghiệp",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 80,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Mobile robot",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "AUT217",
                            subject_name = "Robot di động",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 81,
                            assessment_method_id = 5,
                            credit = 2,
                            english_subject_name = "Law",
                            exam_total = 3,
                            is_active = true,
                            learning_method_id = 1,
                            subject_code = "VIE102",
                            subject_name = "Pháp luật",
                            total_time = 30,
                            total_time_class = 8
                        },
                        new
                        {
                            subject_id = 82,
                            assessment_method_id = 4,
                            credit = 5,
                            english_subject_name = "Capstone Project (Automation Engineering)",
                            exam_total = 6,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "PRO215",
                            subject_name = "Dự án tốt nghiệp (TĐH)",
                            total_time = 225,
                            total_time_class = 10
                        },
                        new
                        {
                            subject_id = 83,
                            assessment_method_id = 1,
                            credit = 5,
                            english_subject_name = "Graduation Internship (Automation Engineering)",
                            exam_total = 0,
                            is_active = true,
                            learning_method_id = 3,
                            subject_code = "PRO126",
                            subject_name = "Thực tập tốt nghiệp (TĐH)",
                            total_time = 225,
                            total_time_class = 0
                        },
                        new
                        {
                            subject_id = 84,
                            assessment_method_id = 5,
                            credit = 3,
                            english_subject_name = "Personal Development Program 1",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "PDP101",
                            subject_name = "Phát triển cá nhân 1",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 85,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Basic Marketing",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "MAR1021",
                            subject_name = "Marketing căn bản",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 86,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Introduction to Digital Marketing",
                            exam_total = 6,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "DOM101",
                            subject_name = "Nhập môn Digital Marketing",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 87,
                            assessment_method_id = 5,
                            credit = 3,
                            english_subject_name = "Email Marketing",
                            exam_total = 6,
                            is_active = true,
                            learning_method_id = 1,
                            subject_code = "DOM1021",
                            subject_name = "Email Marketing",
                            total_time = 90,
                            total_time_class = 12
                        },
                        new
                        {
                            subject_id = 88,
                            assessment_method_id = 3,
                            credit = 3,
                            english_subject_name = "Content Marketing",
                            exam_total = 6,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "DOM1031",
                            subject_name = "Marketing nội dung",
                            total_time = 90,
                            total_time_class = 34
                        },
                        new
                        {
                            subject_id = 89,
                            assessment_method_id = 1,
                            credit = 3,
                            english_subject_name = "Web Design",
                            exam_total = 56,
                            is_active = true,
                            learning_method_id = 2,
                            subject_code = "WEB107",
                            subject_name = "Thiết kế trang web",
                            total_time = 90,
                            total_time_class = 34
                        });
                });

            modelBuilder.Entity("BusinessObject.Syllabus", b =>
                {
                    b.Property<int>("syllabus_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("syllabus_id"), 1L, 1);

                    b.Property<DateTime?>("approved_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("decision_No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("degree_level_id")
                        .HasColumnType("int");

                    b.Property<string>("document_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("min_GPA_to_pass")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("program")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("scoring_scale")
                        .HasColumnType("int");

                    b.Property<string>("student_task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subject_id")
                        .HasColumnType("int");

                    b.Property<bool>("syllabus_approved")
                        .HasColumnType("bit");

                    b.Property<string>("syllabus_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("syllabus_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("syllabus_status")
                        .HasColumnType("bit");

                    b.Property<string>("syllabus_tool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("time_allocation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("syllabus_id");

                    b.HasIndex("degree_level_id");

                    b.HasIndex("subject_id");

                    b.ToTable("Syllabus");
                });

            modelBuilder.Entity("BusinessObject.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"), 1L, 1);

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("refresh_token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("user_id");

                    b.HasIndex("role_id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            user_id = 1,
                            full_name = "Chu Quang Quan",
                            is_active = true,
                            role_id = 3,
                            user_email = "quancqhe153661@fpt.edu.vn",
                            user_name = "QuanCQ"
                        },
                        new
                        {
                            user_id = 2,
                            full_name = "Nguyen Thi Thu",
                            is_active = true,
                            role_id = 2,
                            user_email = "thunthe151440@fpt.edu.vn",
                            user_name = "ThuNT"
                        });
                });

            modelBuilder.Entity("BusinessObject.AssessmentMethod", b =>
                {
                    b.HasOne("BusinessObject.AssessmentType", "AssessmentType")
                        .WithMany("assessment_methods")
                        .HasForeignKey("assessment_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssessmentType");
                });

            modelBuilder.Entity("BusinessObject.Batch", b =>
                {
                    b.HasOne("BusinessObject.DegreeLevel", "DegreeLevel")
                        .WithMany("Batches")
                        .HasForeignKey("degree_level_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DegreeLevel");
                });

            modelBuilder.Entity("BusinessObject.CLO", b =>
                {
                    b.HasOne("BusinessObject.Syllabus", "Syllabus")
                        .WithMany("CLOs")
                        .HasForeignKey("syllabus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("BusinessObject.Combo", b =>
                {
                    b.HasOne("BusinessObject.Specialization", "Specialization")
                        .WithMany("Combos")
                        .HasForeignKey("specialization_id")
                        .IsRequired();

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("BusinessObject.Curriculum", b =>
                {
                    b.HasOne("BusinessObject.Specialization", "Specialization")
                        .WithMany("Curriculums")
                        .HasForeignKey("specialization_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("BusinessObject.CurriculumBatch", b =>
                {
                    b.HasOne("BusinessObject.Batch", "Batch")
                        .WithMany("CurriculumBatchs")
                        .HasForeignKey("batch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Curriculum", "Curriculum")
                        .WithMany("CurriculumBatchs")
                        .HasForeignKey("curriculum_id")
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Curriculum");
                });

            modelBuilder.Entity("BusinessObject.CurriculumSubject", b =>
                {
                    b.HasOne("BusinessObject.Curriculum", "Curriculum")
                        .WithMany("CurriculumSubjects")
                        .HasForeignKey("curriculum_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Subject", "Subject")
                        .WithMany("CurriculumSubjects")
                        .HasForeignKey("subject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BusinessObject.GradingCLO", b =>
                {
                    b.HasOne("BusinessObject.CLO", "CLO")
                        .WithMany("GradingCLOs")
                        .HasForeignKey("CLO_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.GradingStruture", "GradingStruture")
                        .WithMany("GradingCLOs")
                        .HasForeignKey("grading_id")
                        .IsRequired();

                    b.Navigation("CLO");

                    b.Navigation("GradingStruture");
                });

            modelBuilder.Entity("BusinessObject.GradingStruture", b =>
                {
                    b.HasOne("BusinessObject.AssessmentMethod", "AssessmentMethod")
                        .WithMany("GradingStrutures")
                        .HasForeignKey("AssessmentMethodassessment_method_id");

                    b.HasOne("BusinessObject.Syllabus", "Syllabus")
                        .WithMany("Gradings")
                        .HasForeignKey("syllabus_id")
                        .IsRequired();

                    b.Navigation("AssessmentMethod");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("BusinessObject.Major", b =>
                {
                    b.HasOne("BusinessObject.DegreeLevel", "DegreeLevel")
                        .WithMany("Majors")
                        .HasForeignKey("degree_level_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DegreeLevel");
                });

            modelBuilder.Entity("BusinessObject.Material", b =>
                {
                    b.HasOne("BusinessObject.LearningResource", "LearningResource")
                        .WithMany("Material")
                        .HasForeignKey("learning_resource_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Syllabus", "Syllabus")
                        .WithMany("Materials")
                        .HasForeignKey("syllabus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LearningResource");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("BusinessObject.PLOMapping", b =>
                {
                    b.HasOne("BusinessObject.PLOs", "PLOs")
                        .WithMany("PLOMappings")
                        .HasForeignKey("PLO_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Subject", "Subject")
                        .WithMany("PLOMappings")
                        .HasForeignKey("subject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PLOs");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BusinessObject.PLOs", b =>
                {
                    b.HasOne("BusinessObject.Curriculum", "Curriculum")
                        .WithMany("PLOs")
                        .HasForeignKey("curriculum_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");
                });

            modelBuilder.Entity("BusinessObject.PreRequisite", b =>
                {
                    b.HasOne("BusinessObject.PreRequisiteType", "PreRequisiteType")
                        .WithMany("PreRequisites")
                        .HasForeignKey("pre_requisite_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Subject", "PreSubject")
                        .WithMany()
                        .HasForeignKey("pre_subject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Subject", "Subject")
                        .WithMany("PreRequisite")
                        .HasForeignKey("subject_id")
                        .IsRequired();

                    b.Navigation("PreRequisiteType");

                    b.Navigation("PreSubject");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BusinessObject.Question", b =>
                {
                    b.HasOne("BusinessObject.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("quiz_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("BusinessObject.Quiz", b =>
                {
                    b.HasOne("BusinessObject.Subject", "Subject")
                        .WithMany("Quizzes")
                        .HasForeignKey("subject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BusinessObject.Semester", b =>
                {
                    b.HasOne("BusinessObject.Batch", "Batch")
                        .WithMany()
                        .HasForeignKey("start_batch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("BusinessObject.SemesterPlan", b =>
                {
                    b.HasOne("BusinessObject.Curriculum", "Curriculum")
                        .WithMany("Semesters")
                        .HasForeignKey("curriculum_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Semester", "Semester")
                        .WithMany("Semesters")
                        .HasForeignKey("semester_id")
                        .IsRequired();

                    b.Navigation("Curriculum");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("BusinessObject.Session", b =>
                {
                    b.HasOne("BusinessObject.ClassSessionType", "ClassSessionType")
                        .WithMany("Sessions")
                        .HasForeignKey("class_session_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Syllabus", "Syllabus")
                        .WithMany("Sessions")
                        .HasForeignKey("syllabus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassSessionType");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("BusinessObject.SessionCLO", b =>
                {
                    b.HasOne("BusinessObject.CLO", "CLO")
                        .WithMany("SessionCLO")
                        .HasForeignKey("CLO_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Session", "Session")
                        .WithMany("SessionCLO")
                        .HasForeignKey("session_id")
                        .IsRequired();

                    b.Navigation("CLO");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("BusinessObject.Specialization", b =>
                {
                    b.HasOne("BusinessObject.Major", "Major")
                        .WithMany("Specialization")
                        .HasForeignKey("major_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Semester", "Semester")
                        .WithMany("Specializations")
                        .HasForeignKey("semester_id")
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("BusinessObject.Subject", b =>
                {
                    b.HasOne("BusinessObject.AssessmentMethod", "AssessmentMethod")
                        .WithMany("Subjects")
                        .HasForeignKey("assessment_method_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.LearningMethod", "LearningMethod")
                        .WithMany("subjects")
                        .HasForeignKey("learning_method_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssessmentMethod");

                    b.Navigation("LearningMethod");
                });

            modelBuilder.Entity("BusinessObject.Syllabus", b =>
                {
                    b.HasOne("BusinessObject.DegreeLevel", "DegreeLevel")
                        .WithMany("Syllabus")
                        .HasForeignKey("degree_level_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Subject", "Subject")
                        .WithMany("Syllabus")
                        .HasForeignKey("subject_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DegreeLevel");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("BusinessObject.User", b =>
                {
                    b.HasOne("BusinessObject.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObject.AssessmentMethod", b =>
                {
                    b.Navigation("GradingStrutures");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("BusinessObject.AssessmentType", b =>
                {
                    b.Navigation("assessment_methods");
                });

            modelBuilder.Entity("BusinessObject.Batch", b =>
                {
                    b.Navigation("CurriculumBatchs");
                });

            modelBuilder.Entity("BusinessObject.ClassSessionType", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("BusinessObject.CLO", b =>
                {
                    b.Navigation("GradingCLOs");

                    b.Navigation("SessionCLO");
                });

            modelBuilder.Entity("BusinessObject.Curriculum", b =>
                {
                    b.Navigation("CurriculumBatchs");

                    b.Navigation("CurriculumSubjects");

                    b.Navigation("PLOs");

                    b.Navigation("Semesters");
                });

            modelBuilder.Entity("BusinessObject.DegreeLevel", b =>
                {
                    b.Navigation("Batches");

                    b.Navigation("Majors");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("BusinessObject.GradingStruture", b =>
                {
                    b.Navigation("GradingCLOs");
                });

            modelBuilder.Entity("BusinessObject.LearningMethod", b =>
                {
                    b.Navigation("subjects");
                });

            modelBuilder.Entity("BusinessObject.LearningResource", b =>
                {
                    b.Navigation("Material");
                });

            modelBuilder.Entity("BusinessObject.Major", b =>
                {
                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("BusinessObject.PLOs", b =>
                {
                    b.Navigation("PLOMappings");
                });

            modelBuilder.Entity("BusinessObject.PreRequisiteType", b =>
                {
                    b.Navigation("PreRequisites");
                });

            modelBuilder.Entity("BusinessObject.Quiz", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("BusinessObject.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObject.Semester", b =>
                {
                    b.Navigation("Semesters");

                    b.Navigation("Specializations");
                });

            modelBuilder.Entity("BusinessObject.Session", b =>
                {
                    b.Navigation("SessionCLO");
                });

            modelBuilder.Entity("BusinessObject.Specialization", b =>
                {
                    b.Navigation("Combos");

                    b.Navigation("Curriculums");
                });

            modelBuilder.Entity("BusinessObject.Subject", b =>
                {
                    b.Navigation("CurriculumSubjects");

                    b.Navigation("PLOMappings");

                    b.Navigation("PreRequisite");

                    b.Navigation("Quizzes");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("BusinessObject.Syllabus", b =>
                {
                    b.Navigation("CLOs");

                    b.Navigation("Gradings");

                    b.Navigation("Materials");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
